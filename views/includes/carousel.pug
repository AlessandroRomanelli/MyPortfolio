#carousel.carousel.slide.mt-3(data-ride='carousel')
  ol.carousel-indicators
    li.active(data-target='#carousel', data-slide-to='0')
    li(data-target='#carousel', data-slide-to='1')
    li(data-target='#carousel', data-slide-to='2')
    li(data-target='#carousel', data-slide-to='3')
    li(data-target='#carousel', data-slide-to='4')
    li(data-target='#carousel', data-slide-to='5')
    li(data-target='#carousel', data-slide-to='6')
    li(data-target='#carousel', data-slide-to='7')
    li(data-target='#carousel', data-slide-to='8')
    li(data-target='#carousel', data-slide-to='9')
    li(data-target='#carousel', data-slide-to='10')
    li(data-target='#carousel', data-slide-to='11')
    span#carousel-index.text-white.biography.mr-4.lead
  .carousel-inner(role='listbox')
    .carousel-item.active
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/random.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Random Quote Generator
            hr.bg-faded
            p.biography.text-justify This project was my first programm ever. 
              | It consisted of creating a simple JavaScript code that would randomly print out a famous quote to the user, along with author and year. 
              br 
              | Pretty basic, right?
              br
              strong December 2016
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/pagination.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Pagination Content Filter
            hr.bg-faded
            p.biography.text-justify For my second project I had to enhance an already existing page. I had to use JavaScript to dynamically divide the overly long list of student that was provided to me into pages 
              | and add a search function to list only the students matching the search.
              br
              strong January 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/form.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Build an Interactive Form
            hr.bg-faded
            p.biography.text-justify For my third submission I had to use my fresh JavaScript skills to enhance a form so that it would become 
              | more engaging, interactive and easy to use for the end-user, making the form change dynamically depending on the user input.
              br
              strong February 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/tictactoe.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Tic Tac Toe
            hr.bg-faded
            p.biography.text-justify My fourth task was to build a fun two-person Tic Tac Toe game. 
              | The aim was to use professional programming techniques to solve data-modeling problems, write elegant JavaScript code, and apply higher level concepts like object-oriented programming.
              br
              strong February 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/searchapi.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Build a Search App
            hr.bg-faded
            p.biography.text-justify For this challenge I had to use JavaScript to communicate with an API to rietrieve and display music albums from Spotify. 
              | I had to build a form to search and view information and use AJAX request to load data from a server.
              br
              strong March 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/scraper.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Build a Content Scraper
            hr.bg-faded
            p.biography.text-justify This time I had to come up with a data-mining application using Node.js. I created a command-line application that would read a web page, extract information and store it in a text file.
              br
              strong May 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/twitter.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Build a Twitter Interface
            hr.bg-faded
            p.biography.text-justify On this project I was tasked to build and Express application (which runs on Node.js), that would communicate with the Twitter REST API, retrieve JSON data and display the results using a HTML template.
              br
              strong May 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/gulp.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Building with Gulp
            hr.bg-faded
            p.biography.text-justify This project was aimed to develop my skills by automating my workflow, mastering gulp means that I can implement an effective, professional build system using JS, NPM and Node.
              br
              strong May 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/recipes.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Single Page App
            hr.bg-faded
            p.biography.text-justify This time I had to create a seamless user experience by building a single page application using JavaScript and the popular framework AngularJS. The project communicates with a Node.js REST API to add, edit and retrieve cooking recipes.
              br
              strong June 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/library.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Build a Library Manager
            hr.bg-faded
            p.biography.text-justify The goal of this project was to get acquainted with databases, storing, retrieving and deleting information. I had to create a web application for a library based on JavaScript, Node.js, Express and SQLite Database.
              br
              strong June 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/rest.png", alt="alt")
          .col-4.mt-4
            h2.title-header Build a Course Rating API
            hr.bg-faded
            p.biography.text-justify The objective this time was to create an API. I used popular web application frameworks such as Express, and MongoDB database to create the back-end for a Course Rating Application, which lets user create, edit and rate courses.
              br
              strong July 2017
    .carousel-item
      .slide-container
        .row.mt-4.text-white.biography
          .col-4.offset-2.mt-4
            img.img-fluid.rounded(src="images/mys.jpg", alt="alt")
          .col-4.mt-4
            h2.title-header Build my Web Application
            hr.bg-faded
            p.biography.text-justify The Capstone Project of my Treehouse Javascript course was to develop my own personal web application from scratch, building all aspects of the website, from the front to the back end. You can check it out here: 
              a(href='http://mys-treehouse.herokuapp.com/' target='_blank') MYS
              br
              strong July 2017
  a.carousel-control-prev(href='#carousel', role='button', data-slide='prev')
    span.carousel-control-prev-icon(aria-hidden='true')
    span.sr-only Previous
  a.carousel-control-next(href='#carousel', role='button', data-slide='next')
    span.carousel-control-next-icon(aria-hidden='true')
    span.sr-only Next
